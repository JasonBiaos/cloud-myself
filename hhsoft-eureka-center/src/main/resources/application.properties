#f服务名
spring.application.name=eureka-server
#端口
server.port=8761
#服务注册地址
eureka.client.service-url.defaultZone=http://local.register.com:${server.port}/eureka/
#是否向服务注册中心注册自己
eureka.client.register-with-eureka=true
#是否检索服务
eureka.client.fetch-registry=false
#从eureka服务器注册表中获取注册信息的时间间隔（s），默认为30秒
eureka.client.registry-fetch-interval-seconds=30
#leaseExpirationDurationInSeconds，表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
eureka.instance.lease-expiration-duration-in-seconds=90
#leaseRenewalIntervalInSeconds，表示eureka client发送心跳给server端的频率。如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance。除此之外，如果该instance实现了HealthCheckCallback，并决定让自己unavailable的话，则该instance也不会接收到流量。
eureka.instance.lease-renewal-interval-in-seconds=30
#用ip的方式进行服务注册
eureka.instance.prefer-ip-address=true
#Instance ID用于唯一标识注册到Eureka Server上的微服务实例。
eureka.instance.instance-id=${spring.application.name}:${server.port}
#是否开启自我保护模式，默认为true。
eureka.server.enable-self-preservation=true
#eureka server清理无效节点的时间间隔，默认60000毫秒，即60秒
eureka.server.eviction-interval-timer-in-ms=15000
#可以用来选择所有端点。例如，揭露一切通过HTTP除了env和beans端点
management.endpoints.web.exposure.include=*
#
management.endpoint.health.show-details=always
#root日志以INFO级别输出
logging.level.root=info
#设置日志文件存放路径，可以是绝对路径，也可以是相对路径
logging.file=logs/${spring.application.name}.log