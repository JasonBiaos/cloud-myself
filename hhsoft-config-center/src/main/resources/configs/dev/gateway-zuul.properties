#大于0的则表示在容器启动的时候就加载
spring.mvc.servlet.load-on-startup=1

#指定zipkin server的地址
spring.zipkin.base-url=http://localhost:9411

spring.zipkin.enabled=true
spring.zipkin.sender.type=web

#root日志以INFO级别输出
logging.level.root=info
#日志扫描的包的日志级别
logging.level.com.hhsoft.cloud=debug
#设置日志文件存放路径，可以是绝对路径，也可以是相对路径
logging.level.file=logs/${spring.application.name}.log

#可以忽略已经添加的服务. 如果一个服务匹配表达式, 则将会被忽略, 但是对于明确配置在路由匹配中的, 将不会被忽略！
zuul.ignored-services=*
#会过滤客户端附带的headers
zuul.sensitiveHeaders=

#匹配到的path转发到对应的微服务
#转发到认证中心
zuul.routes.oauth.path=/api-o/**
zuul.routes.oauth.serviceId=oauth-center

#转发到用户中心
zuul.routes.api-u.path=/api-u/**
zuul.routes.api-u.serviceId=user-center

#转发到后台管理中心
zuul.routes.backend.path=/api-b/**
zuul.routes.backend.serviceId=manage-backend

#转发到认证中心
zuul.routes.log.path=/api-l/**
zuul.routes.log.serviceId=log-center

#转发到文件中心
zuul.routes.file.path=/api-f/**
zuul.routes.file.serviceId=file-center

#转发到通知消息中心
zuul.routes.sms.path=/api-n/**
zuul.routes.sms.serviceId=notification-center


#################################API 网关超时配置#################################
#区别在于，如果路由方式是serviceId的方式，那么ribbon的生效，如果是url的方式，则zuul.host开头的生效。（此处重要！使用serviceId路由和url路由是不一样的超时策略） 
#如果你在zuul配置了熔断fallback的话，熔断超时也要配置，不然如果你配置的ribbon超时时间大于熔断的超时，那么会先走熔断，相当于你配的ribbon超时就不生效了。
zuul.host.connect-timeout-millis=10000
zuul.host.socket-timeout-millis=60000
zuul.add-proxy-headers=true
zuul.ribbon.eager-load=
zuul.ribbon.enabled=true

#配置ribbon读取超时
ribbon.ReadTimeout=10000
#配置ribbon连接超时
ribbon.ConnectTimeout=10000
#配置熔断超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000

#黑名单定时任务cron表达式:每5分钟更新一次
cron.black-ip=0 0/5 * * * ?